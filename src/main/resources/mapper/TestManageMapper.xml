<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="schooloa.dao.TestManageMapper">
  <resultMap id="BaseResultMap" type="schooloa.bean.TestManage">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="professional" jdbcType="VARCHAR" property="professional" />
    <result column="classname" jdbcType="VARCHAR" property="classname" />
    <result column="courseno" jdbcType="VARCHAR" property="courseno" />
    <result column="testpaperpath" jdbcType="VARCHAR" property="testpaperpath" />
    <result column="testanswerpath" jdbcType="VARCHAR" property="testanswerpath" />
    <result column="computertestpath" jdbcType="VARCHAR" property="computertestpath" />
    <result column="transcriptpath" jdbcType="VARCHAR" property="transcriptpath" />
    <result column="posttime" jdbcType="TIMESTAMP" property="posttime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, professional, classname, courseno, testpaperpath, testanswerpath, computertestpath, 
    transcriptpath, posttime
  </sql>
  
  <select id="selectTestManngerhavep" resultMap="BaseResultMap">
  select * from testmanage where 1=1
	  <if test="professional!=null &amp;&amp; professional!=&quot;&quot;">
	  and professional=#{professional}
	  </if>
	  <if test="classname!=null &amp;&amp; classname!=&quot;&quot;">
	  and classname=#{classname}
	  </if>
	  <if test="courseno!=null &amp;&amp; courseno!=&quot;&quot;">
	  and courseno=#{courseno}
	  </if>
	   limit #{page1,jdbcType=INTEGER},15
  </select>
  
  <select id="selectTestManngerhavep2" resultType="integer">
   select count(*) from testmanage where 1=1
	  <if test="professional!=null &amp;&amp; professional!=&quot;&quot;">
	  and professional=#{professional}
	  </if>
	  <if test="classname!=null &amp;&amp; classname!=&quot;&quot;">
	  and classname=#{classname}
	  </if>
	  <if test="courseno!=null &amp;&amp; courseno!=&quot;&quot;">
	  and courseno=#{courseno}
	  </if>
  </select>
  

  
  
  
  <select id="selectByExample" parameterType="schooloa.bean.TestManageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from testmanage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null &amp;&amp; limit != 0">
			limit ${offset},${limit}
	</if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from testmanage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from testmanage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="schooloa.bean.TestManageExample">
    delete from testmanage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="schooloa.bean.TestManage">
    insert into testmanage (id, professional, classname, 
      courseno, testpaperpath, testanswerpath, 
      computertestpath, transcriptpath, posttime
      )
    values (#{id,jdbcType=INTEGER}, #{professional,jdbcType=VARCHAR}, #{classname,jdbcType=VARCHAR}, 
      #{courseno,jdbcType=VARCHAR}, #{testpaperpath,jdbcType=VARCHAR}, #{testanswerpath,jdbcType=VARCHAR}, 
      #{computertestpath,jdbcType=VARCHAR}, #{transcriptpath,jdbcType=VARCHAR}, #{posttime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="schooloa.bean.TestManage">
    insert into testmanage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="professional != null">
        professional,
      </if>
      <if test="classname != null">
        classname,
      </if>
      <if test="courseno != null">
        courseno,
      </if>
      <if test="testpaperpath != null">
        testpaperpath,
      </if>
      <if test="testanswerpath != null">
        testanswerpath,
      </if>
      <if test="computertestpath != null">
        computertestpath,
      </if>
      <if test="transcriptpath != null">
        transcriptpath,
      </if>
      <if test="posttime != null">
        posttime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="professional != null">
        #{professional,jdbcType=VARCHAR},
      </if>
      <if test="classname != null">
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="courseno != null">
        #{courseno,jdbcType=VARCHAR},
      </if>
      <if test="testpaperpath != null">
        #{testpaperpath,jdbcType=VARCHAR},
      </if>
      <if test="testanswerpath != null">
        #{testanswerpath,jdbcType=VARCHAR},
      </if>
      <if test="computertestpath != null">
        #{computertestpath,jdbcType=VARCHAR},
      </if>
      <if test="transcriptpath != null">
        #{transcriptpath,jdbcType=VARCHAR},
      </if>
      <if test="posttime != null">
        #{posttime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="schooloa.bean.TestManageExample" resultType="java.lang.Long">
    select count(*) from testmanage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update testmanage
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.professional != null">
        professional = #{record.professional,jdbcType=VARCHAR},
      </if>
      <if test="record.classname != null">
        classname = #{record.classname,jdbcType=VARCHAR},
      </if>
      <if test="record.courseno != null">
        courseno = #{record.courseno,jdbcType=VARCHAR},
      </if>
      <if test="record.testpaperpath != null">
        testpaperpath = #{record.testpaperpath,jdbcType=VARCHAR},
      </if>
      <if test="record.testanswerpath != null">
        testanswerpath = #{record.testanswerpath,jdbcType=VARCHAR},
      </if>
      <if test="record.computertestpath != null">
        computertestpath = #{record.computertestpath,jdbcType=VARCHAR},
      </if>
      <if test="record.transcriptpath != null">
        transcriptpath = #{record.transcriptpath,jdbcType=VARCHAR},
      </if>
      <if test="record.posttime != null">
        posttime = #{record.posttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update testmanage
    set id = #{record.id,jdbcType=INTEGER},
      professional = #{record.professional,jdbcType=VARCHAR},
      classname = #{record.classname,jdbcType=VARCHAR},
      courseno = #{record.courseno,jdbcType=VARCHAR},
      testpaperpath = #{record.testpaperpath,jdbcType=VARCHAR},
      testanswerpath = #{record.testanswerpath,jdbcType=VARCHAR},
      computertestpath = #{record.computertestpath,jdbcType=VARCHAR},
      transcriptpath = #{record.transcriptpath,jdbcType=VARCHAR},
      posttime = #{record.posttime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="schooloa.bean.TestManage">
    update testmanage
    <set>
      <if test="professional != null">
        professional = #{professional,jdbcType=VARCHAR},
      </if>
      <if test="classname != null">
        classname = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="courseno != null">
        courseno = #{courseno,jdbcType=VARCHAR},
      </if>
      <if test="testpaperpath != null">
        testpaperpath = #{testpaperpath,jdbcType=VARCHAR},
      </if>
      <if test="testanswerpath != null">
        testanswerpath = #{testanswerpath,jdbcType=VARCHAR},
      </if>
      <if test="computertestpath != null">
        computertestpath = #{computertestpath,jdbcType=VARCHAR},
      </if>
      <if test="transcriptpath != null">
        transcriptpath = #{transcriptpath,jdbcType=VARCHAR},
      </if>
      <if test="posttime != null">
        posttime = #{posttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="schooloa.bean.TestManage">
    update testmanage
    set professional = #{professional,jdbcType=VARCHAR},
      classname = #{classname,jdbcType=VARCHAR},
      courseno = #{courseno,jdbcType=VARCHAR},
      testpaperpath = #{testpaperpath,jdbcType=VARCHAR},
      testanswerpath = #{testanswerpath,jdbcType=VARCHAR},
      computertestpath = #{computertestpath,jdbcType=VARCHAR},
      transcriptpath = #{transcriptpath,jdbcType=VARCHAR},
      posttime = #{posttime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--  <select id="fenye" resultMap="BaseResultMap">
  select * from testManage
  <where>
  <if test="#{professional}">
  and professional=#{professional}
  </if>
  <if test="#{classname}">
  and classname=#{classname}
  </if>
  <if test="#{courseno}">
  and courseno=#{courseno}
  </if>
  </where>
   limit #{qian},15
  </select>  -->

</mapper>