<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="schooloa.dao.UserPermissionsMapper">
  <resultMap id="BaseResultMap" type="schooloa.bean.UserPermissions">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="jobnumber" jdbcType="VARCHAR" property="jobnumber" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="professional" jdbcType="VARCHAR" property="professional" />
  </resultMap>
  
  <resultMap id="BaseResultMap2" type="schooloa.bean.UserPermissions">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="jobnumber" jdbcType="VARCHAR" property="jobnumber" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="professional" jdbcType="VARCHAR" property="professional" />
    <collection property="lUserInfos" ofType="schooloa.bean.UserInfo">
		<id column="id" jdbcType="INTEGER" property="id" />
	    <result column="upid" jdbcType="INTEGER" property="upid" />
	    <result column="school" jdbcType="VARCHAR" property="school" />
	    <result column="departments" jdbcType="VARCHAR" property="departments" />
	    <result column="name" jdbcType="VARCHAR" property="name" />
	    <result column="sex" jdbcType="VARCHAR" property="sex" />
	    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
	    <result column="education" jdbcType="VARCHAR" property="education" />
	    <result column="degree" jdbcType="VARCHAR" property="degree" />
	    <result column="officialname" jdbcType="VARCHAR" property="officialname" />
	    <result column="email" jdbcType="VARCHAR" property="email" />
	    <result column="tel" jdbcType="VARCHAR" property="tel" />		
	</collection>
  </resultMap>
  
  <select id="query" resultMap="BaseResultMap2">
  	select * from userpermissions as up,userinfo as ui where up.id=ui.upid
  </select>
  
  <select id="queryByRoleAndProfessional" resultMap="BaseResultMap2">
  	select * from userpermissions as up,userinfo as ui where up.id=ui.upid
  	and role=#{role} and professional=#{professional}
  </select>
  
  <select id="queryByRoleAndProfessionalAndJobnumber" resultMap="BaseResultMap2">
  	select * from userpermissions as up,userinfo as ui where up.id=ui.upid
  	and role=#{role} and professional=#{professional} and jobnumber=#{jobnumber}
  </select>
  

  <select id="queryByJobNumber" resultMap="BaseResultMap2">
  	select * from userpermissions as up,userinfo as ui where up.id=ui.upid
  	and jobnumber=#{jobnumber};
  </select>
  
  
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, role, jobnumber, password, professional
  </sql>
  <select id="selectByExample" parameterType="schooloa.bean.UserPermissionsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from userpermissions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByJobNumber"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userpermissions
    where jobnumber = #{jobnumber}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete userpermissions,userinfo from  userpermissions left join  userinfo on userpermissions.id = userinfo.upid
     where userpermissions.id=#{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="schooloa.bean.UserPermissionsExample">
    delete from userpermissions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="schooloa.bean.UserPermissions">
    insert into userpermissions (role, jobnumber, 
      password, professional)
    values (#{role,jdbcType=VARCHAR}, #{jobnumber,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{professional,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="schooloa.bean.UserPermissions">
    insert into userpermissions
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="jobnumber != null">
        jobnumber,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="professional != null">
        professional,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="jobnumber != null">
        #{jobnumber,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="professional != null">
        #{professional,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="schooloa.bean.UserPermissionsExample" resultType="java.lang.Long">
    select count(*) from userpermissions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update userpermissions
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.jobnumber != null">
        jobnumber = #{record.jobnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.professional != null">
        professional = #{record.professional,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update userpermissions
    set id = #{record.id,jdbcType=INTEGER},
      role = #{record.role,jdbcType=VARCHAR},
      jobnumber = #{record.jobnumber,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      professional = #{record.professional,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="schooloa.bean.UserPermissions">
    update userpermissions
    <set>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="jobnumber != null">
        jobnumber = #{jobnumber,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="professional != null">
        professional = #{professional,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="schooloa.bean.UserPermissions">
    update userpermissions
    set role = #{role,jdbcType=VARCHAR},
      jobnumber = #{jobnumber,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      professional = #{professional,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>